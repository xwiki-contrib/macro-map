<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.3" reference="MapMacro.Code.GoogleMap" locale="">
  <web>MapMacro.Code</web>
  <name>GoogleMap</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1530085982000</creationDate>
  <parent>dev:MapMacro.Code.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1530526176000</date>
  <contentUpdateDate>1530085982000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content/>
  <object>
    <name>MapMacro.Code.GoogleMap</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>14a21fb4-ae4d-47dd-ae9a-6c3325599427</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>var apiKey = $$('.xwiki-map-container')[0].readAttribute('data-key');

require(['https://maps.googleapis.com/maps/api/js?key=' + apiKey], function() {
  'use strict';

  XWiki.googleMap = Class.create({
    /*
    ** Load a map centered on the given location
    */
    initialize: function(element, location, options) {
      this.element = $(element);
      // Default option values
      this.options = (options !== undefined &amp;&amp; typeof options == 'object' ) ? options : {};
      this.options.info         = this.options.info !== undefined         ? this.options.info : '';
      this.options.zoom         = this.options.zoom !== undefined         ? this.options.zoom : 15;
      this.options.showErrors   = this.options.showErrors !== undefined   ? this.options.showErrors : true;
      this.options.locationType = this.options.locationType !== undefined ? this.options.locationType : 'address';
      // Get the exact geolocalization
      var geocoder = new google.maps.Geocoder();
      geocoder.geocode( { 'address': location }, function(results, status) {
        if (status == google.maps.GeocoderStatus.OK) {
          var latLng;

          // Check if the location type is Geographic Coordinate
          if (this.options.locationType == 'latlng') {
            // get the latitude and longitude
            var latlng = location.split(',');
            var lat = latlng[0];
            var lng = latlng[1];
            latLng = new google.maps.LatLng(lat,lng);
          } else {
            latLng = results[0].geometry.location;
          }

          // Create map
          var mapOptions = {
            zoom: this.options.zoom,
            center: latLng,
            mapTypeId: google.maps.MapTypeId.ROADMAP
          };
          this.map = new google.maps.Map(this.element, mapOptions);

          // Create marker
          var marker = new google.maps.Marker({
            map: this.map,
            position: latLng
          });

          // Create info window
          if (this.options.info != '') {
            var infoWindow = new google.maps.InfoWindow({
              content: this.options.info
            });
            infoWindow.open(this.map, marker);
          }
        } else if (this.options.showErrors) {
          new XWiki.widgets.Notification('Error: ' + status, 'error');
        }

        // Fire status event
        // Status codes: OK, ZERO_RESULTS, OVER_QUERY_LIMIT, REQUEST_DENIED, INVALID_REQUEST, UNKNOWN_ERROR
        // Documentation: https://developers.google.com/maps/documentation/geocoding/#StatusCodes
        this.element.fire('GMAPS:' + status);
      }.bind(this));
    }
  });

  var init = function() {
    $$('.xwiki-map-container').each(function(item) {
      var options = {};
      var library = item.dataset.library;
      if (library == "googlemaps") {
        if (item.textContent) {
          options.info = item.textContent;
        }
        var zoom = $w(item.className).detect(function(c) { return c.startsWith('zoom-')});
        if (zoom) {
          options.zoom = zoom.substring(5) - 0;
        }
        
        options.locationType = 'address';
        var locationType = item.dataset.locationType;
        if (locationType)
          options.locationType = locationType;
        options.showErrors = true;
        new XWiki.googleMap(item, item.title, options);
      }
    });
  };

  (XWiki &amp;&amp; XWiki.domIsLoaded &amp;&amp; init()) || document.observe('xwiki:dom:loaded', init);
});
// Listening for authentication errors/invalid API key. If Google sends an error and prevent maps to be displayed,
// show an error in the map's place instead.
function gm_authFailure() {
  $$('.xwiki-map-container').each(function(item) {
    var library = item.dataset.library;
    if (library == "googlemaps") {
      item.hide();
      $('invalidApiKey-' + item.id).removeClassName('hidden');
    }
      
  });
}</code>
    </property>
    <property>
      <name>google-map</name>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
</xwikidoc>
